
<?php require_once('../../../common/head.php'); ?>
<?php require_once('../../../common/header.php'); ?>
	<main>
		<div class="main_wrap">
			<div class="main_wrap_inner">
				<div class="pankuzu">
					<div class="container">
						<ul>
							<li><a href="/manage/estimates/"><span>見積書一覧</span></a></li>
							<!-- <li><a href="/manage/estimates/"><span>見積書</span></a></li> -->
							<li><a href="/manage/estimates/simulation/"><span>シミュレーション</span></a></li>
							<li><span>シミュレーション編集</span></li>
						</ul>
					</div>
				</div>
				<div class="main_title">
					<div class="container">
						<div class="main_title_headline">
							<h1>シミュレーション編集</h1>
						</div>
					</div>
				</div>
				<div id="simulationEdit" class="main_content input_area simulation_data">
					<div class="container">
						<div class="main_content_inner simulation_data_inner">
							<div class="simulation_data_comparison">
								<div class="simulation_data_comparison_inner">
									<table>
										<thead>
											<tr>
												<th>ご利用予定金額</th>
												<th>日付</th>
												<th><input type="text" name="" value="2020年3月17日"></th>
											</tr>
											<tr class="color">
												<th>
													<span class="number"><input type="text" name="" v-model="shokei"></span>(税込)
												</th>
												<th>パターン1</th>
												<th>パターン2</th>
												<th>パターン3</th>
											</tr>
										</thead>
										<tbody>
											<tr>
												<th>頭金</th>
												<td><input type="text" name="qu_deposit1" v-model="downPayment1" pattern="^[0-9,]+$" title="半角数字をご入力ください"></td>
												<td><input type="text" name="qu_deposit2" v-model="downPayment2" pattern="^[0-9,]+$" title="半角数字をご入力ください"></td>
												<td><input type="text" name="qu_deposit3" v-model="downPayment3" pattern="^[0-9,]+$" title="半角数字をご入力ください"></td>
											</tr>
											<tr>
												<th>事務管理手数料率</th>
												<td><input type="text" name="qu_commission1" v-model="adminPer1" pattern="^[0-9.]+$" title="半角数字をご入力ください"></td>
												<td><input type="text" name="qu_commission2" v-model="adminPer2" pattern="^[0-9.]+$" title="半角数字をご入力ください"></td>
												<td><input type="text" name="qu_commission3" v-model="adminPer3" pattern="^[0-9.]+$" title="半角数字をご入力ください"></td>
											</tr>
											<tr>
												<th>初回お支払額</th>
												<td><input type="text" name="qu_initPayAmount1" v-model="initialPayment1" value="0" pattern="^[0-9,]+$" title="半角数字をご入力ください"></td>
												<td><input type="text" name="qu_initPayAmount2" v-model="initialPayment2" value="0" pattern="^[0-9,]+$" title="半角数字をご入力ください"></td>
												<td><input type="text" name="qu_initPayAmount3" v-model="initialPayment3" value="0" pattern="^[0-9,]+$" title="半角数字をご入力ください"></td>
											</tr>
											<tr>
												<th>月々お支払額</th>
												<td><input type="text" name="qu_amount_pay1" v-model="monthlyPayment1" readonly="readonly" value="0" title="自動計算エリア"></td>
												<td><input type="text" name="qu_amount_pay2" v-model="monthlyPayment2" readonly="readonly" value="0" title="自動計算エリア"></td>
												<td><input type="text" name="qu_amount_pay3" v-model="monthlyPayment3" readonly="readonly" value="0" title="自動計算エリア"></td>
											</tr>
											<tr>
												<th>分割回数</th>
												<td>
													<select name="qu_installments1" v-model="numberPayments1">
														<option v-for="split of 45" :key="split" v-bind:value="split+3">{{ split + 3 }}</option>
													</select>
													回払い
												</td>
												<td>
													<select name="qu_installments2" v-model="numberPayments2">
														<option v-for="split of 45" :key="split" v-bind:value="split+3">{{ split + 3 }}</option>
													</select>
													回払い
												</td>
												<td>
													<select name="qu_installments3" v-model="numberPayments3">
														<option v-for="split of 45" :key="split" v-bind:value="split+3">{{ split + 3 }}</option>
													</select>
													回払い
												</td>
											</tr>
											<tr>
												<th>総支払額</th>
												<td><input type="text" name="q_alltotal1" v-model="estimatesPrice1" value="" readonly="readonly" title="自動計算エリア"></td>
												<td><input type="text" name="q_alltotal2" v-model="estimatesPrice2" value="" readonly="readonly" title="自動計算エリア"></td>
												<td><input type="text" name="q_alltotal3" v-model="estimatesPrice3" value="" readonly="readonly" title="自動計算エリア"></td>
											</tr>
										</tbody>
									</table>
									<div class="submit_button"><input type="submit" name="send2" value="パターンを更新する"></div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</main>
	<?php require_once('../../../common/script.php'); ?>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.8.2/moment.min.js"></script> 
	<script>
    	(function() {
    		// 項目を追加する機能
    		var simulationEdit = new Vue ({
    			el: '#simulationEdit',
    			data () {
					return {
						shokei: 0,
						adminPer1: '5.00',  // 事務管理手数料率
						adminPer2: '5.00',  // 事務管理手数料率
						adminPer3: '5.00',  // 事務管理手数料率
						initialPayment1: 0, // 初回お支払額
						initialPayment2: 0, // 初回お支払額
						initialPayment3: 0, // 初回お支払額
						downPayment1: 0,    // 頭金
						downPayment2: 0,    // 頭金
						downPayment3: 0,    // 頭金
						numberPayments1: 4, // 分割階数
						numberPayments2: 4, // 分割階数
						numberPayments3: 4, // 分割階数
					}
    			},
    			computed: {
    				monthlyPayment1: function() {
    					let monthlyPaymentTarget1 = Math.ceil((Number(this.estimatesPrice1) - ( Number(this.initialPayment1) + Number(this.downPayment1) ) ) / (Number(this.numberPayments1) - 1)) || 0;
    					// 通貨記号と３桁ごとにカンマを付ける
    					let monthlyPaymentTargetComma1 = monthlyPaymentTarget1.toLocaleString("jp",{style:"currency",currency:"JPY"});
    					return(monthlyPaymentTargetComma1);
    				},
    				monthlyPayment2: function() {
    					let monthlyPaymentTarget2 = Math.ceil((Number(this.estimatesPrice2) - ( Number(this.initialPayment2) + Number(this.downPayment2) ) ) / (Number(this.numberPayments1) - 1)) || 0;
    					// 通貨記号と３桁ごとにカンマを付ける
    					let monthlyPaymentTargetComma2 = monthlyPaymentTarget2.toLocaleString("jp",{style:"currency",currency:"JPY"});
    					return(monthlyPaymentTargetComma2);
    				},
    				monthlyPayment3: function() {
    					let monthlyPaymentTarget3 = Math.ceil((Number(this.estimatesPrice3) - ( Number(this.initialPayment3) + Number(this.downPayment3) ) ) / (Number(this.numberPayments3) - 1)) || 0;
    					// 通貨記号と３桁ごとにカンマを付ける
    					let monthlyPaymentTargetComma3 = monthlyPaymentTarget3.toLocaleString("jp",{style:"currency",currency:"JPY"});
    					return(monthlyPaymentTargetComma3);
    				},
    				estimatesPrice1: function() {
    					let estimatesPriceTarget1 = Number(this.shokei) + Math.ceil((Number(this.adminPer1) * Number(this.shokei)) / 100) || 0;
    					let estimatesPriceTargetComma1 = estimatesPriceTarget1.toLocaleString("jp",{style:"currency",currency:"JPY"});
    					return(estimatesPriceTargetComma1);
    				},
    				estimatesPrice2: function() {
    					let estimatesPriceTarget2 = Number(this.shokei) + Math.ceil((Number(this.adminPer2) * Number(this.shokei)) / 100) || 0;
    					let estimatesPriceTargetComma2 = estimatesPriceTarget2.toLocaleString("jp",{style:"currency",currency:"JPY"});
    					return(estimatesPriceTargetComma2);
    				},
    				estimatesPrice3: function() {
    					let estimatesPriceTarget3 = Number(this.shokei) + Math.ceil((Number(this.adminPer3) * Number(this.shokei)) / 100) || 0;
    					let estimatesPriceTargetComma3 = estimatesPriceTarget3.toLocaleString("jp",{style:"currency",currency:"JPY"});
    					return(estimatesPriceTargetComma3);
    				}
    			}
    		});
    	})();
	</script>
</body>
</html>